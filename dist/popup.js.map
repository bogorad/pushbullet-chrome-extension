{
  "version": 3,
  "sources": ["../src/lib/ui/dom.ts", "../src/popup/index.ts"],
  "sourcesContent": ["/**\n * DOM manipulation utilities for UI pages\n */\n\n/**\n * Safely get an element by ID with type checking\n */\nexport function getElementById<T extends HTMLElement>(id: string): T {\n  const element = document.getElementById(id);\n  if (!element) {\n    throw new Error(`Element with id \"${id}\" not found`);\n  }\n  return element as T;\n}\n\n/**\n * Safely query selector with type checking\n */\nexport function querySelector<T extends Element>(selector: string): T {\n  const element = document.querySelector(selector);\n  if (!element) {\n    throw new Error(`Element with selector \"${selector}\" not found`);\n  }\n  return element as T;\n}\n\n/**\n * Show an element\n */\nexport function show(element: HTMLElement): void {\n  element.style.display = '';\n}\n\n/**\n * Hide an element\n */\nexport function hide(element: HTMLElement): void {\n  element.style.display = 'none';\n}\n\n/**\n * Toggle element visibility\n */\nexport function toggle(element: HTMLElement): void {\n  if (element.style.display === 'none') {\n    show(element);\n  } else {\n    hide(element);\n  }\n}\n\n/**\n * Set text content safely\n */\nexport function setText(element: HTMLElement, text: string): void {\n  element.textContent = text;\n}\n\n/**\n * Set HTML content safely (sanitized)\n */\nexport function setHTML(element: HTMLElement, html: string): void {\n  // Basic sanitization - remove script tags\n  const sanitized = html.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  element.innerHTML = sanitized;\n}\n\n/**\n * Add event listener with type safety\n */\nexport function on<K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void\n): void {\n  element.addEventListener(event, handler);\n}\n\n/**\n * Format timestamp for display\n */\nexport function formatTimestamp(date: Date): string {\n  const now = new Date();\n  const diff = now.getTime() - date.getTime();\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return 'just now';\n  } else if (minutes < 60) {\n    return `${minutes}m ago`;\n  } else if (hours < 24) {\n    return `${hours}h ago`;\n  } else if (days < 7) {\n    return `${days}d ago`;\n  } else {\n    return date.toLocaleDateString();\n  }\n}\n\n/**\n * Show status message\n */\nexport function showStatus(element: HTMLElement, message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n  element.textContent = message;\n  element.className = `status-message status-${type}`;\n  show(element);\n  \n  // Auto-hide after 3 seconds\n  setTimeout(() => {\n    hide(element);\n  }, 3000);\n}\n\n/**\n * Clear all children of an element\n */\nexport function clearChildren(element: HTMLElement): void {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\n", "/**\n * Popup page - Full TypeScript implementation\n */\n\nimport type { Push, Device, UserInfo } from '../types/domain';\nimport { getElementById, formatTimestamp as formatTimestampUtil } from '../lib/ui/dom';\n\n// API URLs\nconst USER_INFO_URL = 'https://api.pushbullet.com/v2/users/me';\nconst DEVICES_URL = 'https://api.pushbullet.com/v2/devices';\nconst PUSHES_URL = 'https://api.pushbullet.com/v2/pushes';\nconst WEBSOCKET_URL = 'wss://stream.pushbullet.com/websocket/';\n\n// Type definitions\ninterface SessionData {\n  isAuthenticated: boolean;\n  devices: Device[];\n  userInfo: UserInfo;\n  recentPushes: Push[];\n  autoOpenLinks: boolean;\n  websocketConnected?: boolean;\n  deviceNickname?: string;\n}\n\ntype PushType = 'note' | 'link' | 'file';\n\ninterface PushData {\n  type: PushType;\n  device_iden?: string;\n  source_device_iden?: string;\n  title?: string;\n  body?: string;\n  url?: string;\n  file_name?: string;\n  file_type?: string;\n  file_url?: string;\n}\n\ninterface UploadRequestResponse {\n  file_name: string;\n  file_type: string;\n  file_url: string;\n  upload_url: string;\n  data: Record<string, string>;\n}\n\n// DOM elements\nconst loadingSection = getElementById<HTMLDivElement>('loading-section');\nconst loginSection = getElementById<HTMLDivElement>('login-section');\nconst mainSection = getElementById<HTMLDivElement>('main-section');\nconst apiKeyInput = getElementById<HTMLInputElement>('api-key');\nconst deviceNicknameInput = getElementById<HTMLInputElement>('device-nickname');\nconst saveApiKeyButton = getElementById<HTMLButtonElement>('save-api-key');\nconst logoutButton = getElementById<HTMLButtonElement>('logout');\nconst userImage = getElementById<HTMLImageElement>('user-image');\nconst userName = getElementById<HTMLSpanElement>('user-name');\n// Connection indicator removed - using badge instead\nconst pushTypeNoteBtn = getElementById<HTMLButtonElement>('push-type-note');\nconst pushTypeLinkBtn = getElementById<HTMLButtonElement>('push-type-link');\nconst pushTypeFileBtn = getElementById<HTMLButtonElement>('push-type-file');\nconst noteForm = getElementById<HTMLDivElement>('note-form');\nconst linkForm = getElementById<HTMLDivElement>('link-form');\nconst fileForm = getElementById<HTMLDivElement>('file-form');\nconst fileInput = getElementById<HTMLInputElement>('file-input');\nconst fileSelected = getElementById<HTMLDivElement>('file-selected');\nconst fileName = getElementById<HTMLSpanElement>('file-name');\nconst fileSize = getElementById<HTMLSpanElement>('file-size');\nconst noteTitleInput = getElementById<HTMLInputElement>('note-title');\nconst noteBodyInput = getElementById<HTMLTextAreaElement>('note-body');\nconst linkTitleInput = getElementById<HTMLInputElement>('link-title');\nconst linkUrlInput = getElementById<HTMLInputElement>('link-url');\nconst linkBodyInput = getElementById<HTMLTextAreaElement>('link-body');\nconst targetDeviceSelect = getElementById<HTMLSelectElement>('target-device');\nconst sendPushButton = getElementById<HTMLButtonElement>('send-push');\nconst pushesList = getElementById<HTMLDivElement>('pushes-list');\nconst statusMessage = getElementById<HTMLDivElement>('status-message');\nconst openSettingsBtn = getElementById<HTMLButtonElement>('open-settings');\nconst openDebugDashboardBtn = getElementById<HTMLButtonElement>('open-debug-dashboard');\n\n// State variables\nlet apiKey: string | null = null;\nlet deviceNickname = 'Chrome';\nlet devices: Device[] = [];\nlet hasInitialized = false;\nlet currentPushType: PushType = 'note';\nlet websocket: WebSocket | null = null;\n\n/**\n * Initialize popup\n */\nfunction init(): void {\n  console.log('Popup initializing');\n  setupEventListeners();\n  checkStorageForApiKey();\n}\n\n/**\n * Initialize from session data (from background)\n */\nasync function initializeFromSessionData(response: SessionData): Promise<void> {\n  if (!response.isAuthenticated) {\n    showSection('login');\n    return;\n  }\n\n  // Update device nickname\n  if (response.deviceNickname) {\n    deviceNickname = response.deviceNickname;\n    console.log('Device nickname:', deviceNickname);\n  }\n\n  // Update user info\n  if (response.userInfo) {\n    updateUserInfo(response.userInfo);\n  }\n\n  // Populate device dropdown\n  populateDeviceDropdown(response.devices);\n\n  // Display pushes\n  displayPushes(response.recentPushes);\n\n  // Show main section\n  showSection('main');\n\n  // Connection status is now shown via badge icon (no UI indicator needed)\n\n  // Connect to WebSocket\n  connectWebSocket();\n\n  hasInitialized = true;\n}\n\n/**\n * Check storage for API key\n */\nfunction checkStorageForApiKey(): void {\n  console.log('Checking storage for API key');\n  showSection('loading');\n\n  const syncPromise = chrome.storage.sync.get(['apiKey', 'autoOpenLinks', 'deviceNickname']);\n  const localPromise = chrome.storage.local.get(['scrollToRecentPushes']);\n\n  Promise.all([syncPromise, localPromise]).then(\n    async ([syncResult, localResult]) => {\n      const result = { ...syncResult, ...localResult };\n      if (result.apiKey) {\n        apiKey = result.apiKey as string;\n\n        if (result.autoOpenLinks !== undefined) {\n          console.log('Auto-open links setting:', result.autoOpenLinks);\n        }\n\n        if (result.deviceNickname) {\n          deviceNickname = result.deviceNickname as string;\n          console.log('Device nickname:', deviceNickname);\n        }\n\n        try {\n          await initializeAuthenticated();\n          showSection('main');\n          hasInitialized = true;\n\n          // Check if we should scroll to recent pushes\n          if (result.scrollToRecentPushes) {\n            chrome.storage.local.remove(['scrollToRecentPushes']);\n            setTimeout(() => {\n              scrollToRecentPushes();\n            }, 100);\n          }\n        } catch (error) {\n          console.error('Error initializing:', error);\n          showSection('login');\n        }\n      } else {\n        showSection('login');\n      }\n    },\n  );\n}\n\n/**\n * Show section\n */\nfunction showSection(section: 'loading' | 'login' | 'main'): void {\n  console.log('Showing section:', section);\n  loadingSection.style.display = section === 'loading' ? 'flex' : 'none';\n  loginSection.style.display = section === 'login' ? 'block' : 'none';\n  mainSection.style.display = section === 'main' ? 'block' : 'none';\n}\n\n/**\n * Set up event listeners\n */\nfunction setupEventListeners(): void {\n  // Save API key button\n  saveApiKeyButton.addEventListener('click', saveApiKey);\n\n  // API key input - save on Enter\n  apiKeyInput.addEventListener('keyup', (event) => {\n    if (event.key === 'Enter') {\n      saveApiKey();\n    }\n  });\n\n  // Device nickname input - save on Enter\n  deviceNicknameInput.addEventListener('keyup', (event) => {\n    if (event.key === 'Enter') {\n      saveApiKey();\n    }\n  });\n\n  // Logout button\n  logoutButton.addEventListener('click', logout);\n\n  // Push type buttons\n  pushTypeNoteBtn.addEventListener('click', () => togglePushType('note'));\n  pushTypeLinkBtn.addEventListener('click', () => togglePushType('link'));\n  pushTypeFileBtn.addEventListener('click', () => togglePushType('file'));\n\n  // File input\n  fileInput.addEventListener('change', handleFileSelect);\n\n  // Send push button\n  sendPushButton.addEventListener('click', sendPush);\n\n  // Open settings\n  openSettingsBtn.addEventListener('click', () => {\n    chrome.runtime.openOptionsPage();\n  });\n\n  // Open debug dashboard\n  openDebugDashboardBtn.addEventListener('click', () => {\n    chrome.tabs.create({\n      url: chrome.runtime.getURL('debug-dashboard.html')\n    });\n  });\n}\n\n/**\n * Save API key\n */\nasync function saveApiKey(): Promise<void> {\n  const newApiKey = apiKeyInput.value.trim();\n  const newNickname = deviceNicknameInput.value.trim() || 'Chrome';\n\n  if (!newApiKey) {\n    showStatus('Please enter an Access Token.', 'error');\n    return;\n  }\n\n  showSection('loading');\n\n  try {\n    // Validate API key\n    const response = await fetch(USER_INFO_URL, {\n      headers: {\n        'Access-Token': newApiKey,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Invalid Access Token');\n    }\n\n    // Save to storage\n    await chrome.storage.sync.set({\n      apiKey: newApiKey,\n      deviceNickname: newNickname,\n    });\n\n    apiKey = newApiKey;\n    deviceNickname = newNickname;\n\n    // Notify background\n    chrome.runtime.sendMessage({\n      action: 'apiKeyChanged',\n      apiKey: newApiKey,\n      deviceNickname: newNickname,\n    });\n\n    await initializeAuthenticated();\n    showSection('main');\n    hasInitialized = true;\n  } catch (error) {\n    showStatus(`Error: ${(error as Error).message}`, 'error');\n    showSection('login');\n  }\n}\n\n/**\n * Logout\n */\nfunction logout(): void {\n  disconnectWebSocket();\n  chrome.storage.sync.remove(['apiKey']);\n  chrome.storage.local.remove(['deviceIden']);\n  apiKey = null;\n  hasInitialized = false;\n  showSection('login');\n  apiKeyInput.value = '';\n  deviceNicknameInput.value = '';\n}\n\n/**\n * Initialize authenticated state\n */\nasync function initializeAuthenticated(): Promise<boolean> {\n  try {\n    // Get user info\n    const userInfo = await fetchUserInfo();\n\n    // Get devices\n    devices = await fetchDevices();\n\n    // Populate device dropdown\n    populateDeviceDropdown(devices);\n\n    // Get recent pushes\n    const pushes = await fetchRecentPushes();\n\n    // Display pushes\n    displayPushes(pushes);\n\n    // Update UI\n    updateUserInfo(userInfo);\n\n    // Connect to WebSocket\n    connectWebSocket();\n\n    return true;\n  } catch (error) {\n    console.error('Error in initializeAuthenticated:', error);\n    throw error;\n  }\n}\n\n/**\n * Fetch user info\n */\nasync function fetchUserInfo(): Promise<UserInfo> {\n  if (!apiKey) throw new Error('No API key');\n\n  const response = await fetch(USER_INFO_URL, {\n    headers: {\n      'Access-Token': apiKey,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch user info');\n  }\n\n  return response.json();\n}\n\n/**\n * Fetch devices\n */\nasync function fetchDevices(): Promise<Device[]> {\n  if (!apiKey) throw new Error('No API key');\n\n  const response = await fetch(DEVICES_URL, {\n    headers: {\n      'Access-Token': apiKey,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch devices');\n  }\n\n  const data = await response.json() as { devices: Device[] };\n  return data.devices.filter((device) => device.active);\n}\n\n/**\n * Fetch recent pushes\n */\nasync function fetchRecentPushes(): Promise<Push[]> {\n  if (!apiKey) throw new Error('No API key');\n\n  const response = await fetch(`${PUSHES_URL}?limit=20`, {\n    headers: {\n      'Access-Token': apiKey,\n    },\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch pushes');\n  }\n\n  const data = await response.json() as { pushes: Push[] };\n\n  // Get device iden\n  let deviceIden: string | null = null;\n  try {\n    const deviceResult = await chrome.storage.local.get(['deviceIden']);\n    deviceIden = deviceResult.deviceIden as string;\n  } catch (error) {\n    console.error('Error getting device iden:', error);\n  }\n\n  // Filter pushes\n  return data.pushes.filter((push) => {\n    const hasContent = push.title || push.body || push.url;\n    return hasContent && !push.dismissed;\n  });\n}\n\n/**\n * Connect to WebSocket\n */\nfunction connectWebSocket(): void {\n  disconnectWebSocket();\n\n  if (!apiKey) return;\n\n  try {\n    const wsUrl = WEBSOCKET_URL + apiKey;\n    websocket = new WebSocket(wsUrl);\n\n    websocket.onopen = () => {\n      console.log('Connected to Pushbullet WebSocket from popup');\n    };\n\n    websocket.onmessage = async (event) => {\n      const data = JSON.parse(event.data) as { type: string; subtype?: string; push?: Push };\n      console.log('WebSocket message received in popup:', data);\n\n      switch (data.type) {\n        case 'tickle':\n          if (data.subtype === 'push') {\n            console.log('Push tickle received in popup, fetching latest pushes');\n            const pushes = await fetchRecentPushes();\n            displayPushes(pushes);\n          }\n          break;\n        case 'push':\n          if (data.push) {\n            console.log('Push message received directly in popup:', data.push);\n            const pushes = await fetchRecentPushes();\n            displayPushes(pushes);\n          }\n          break;\n      }\n    };\n\n    websocket.onerror = (error) => {\n      console.error('WebSocket error in popup:', error);\n    };\n\n    websocket.onclose = () => {\n      console.log('Disconnected from Pushbullet WebSocket in popup');\n      setTimeout(() => {\n        if (apiKey && hasInitialized) {\n          connectWebSocket();\n        }\n      }, 5000);\n    };\n  } catch (error) {\n    console.error('Error connecting to WebSocket from popup:', error);\n  }\n}\n\n/**\n * Disconnect WebSocket\n */\nfunction disconnectWebSocket(): void {\n  if (websocket) {\n    websocket.close();\n    websocket = null;\n  }\n}\n\n/**\n * Update user info\n */\nfunction updateUserInfo(userInfo: UserInfo): void {\n  userName.textContent = userInfo.name || userInfo.email;\n\n  if (userInfo.image_url) {\n    userImage.src = userInfo.image_url;\n    userImage.style.display = 'block';\n  } else {\n    userImage.style.display = 'none';\n  }\n}\n\n/**\n * Populate device dropdown\n */\nfunction populateDeviceDropdown(devicesList: Device[]): void {\n  const devicesToUse = devicesList || devices;\n\n  // Clear existing options except 'All Devices'\n  while (targetDeviceSelect.options.length > 1) {\n    targetDeviceSelect.remove(1);\n  }\n\n  // Add devices\n  devicesToUse.forEach((device) => {\n    const option = document.createElement('option');\n    option.value = device.iden;\n    option.textContent = device.nickname || device.model || 'Unknown Device';\n    targetDeviceSelect.appendChild(option);\n  });\n}\n\n/**\n * Display pushes\n */\nfunction displayPushes(pushes: Push[]): void {\n  pushesList.innerHTML = '';\n\n  if (!pushes || pushes.length === 0) {\n    pushesList.innerHTML = '<p>No recent pushes</p>';\n    return;\n  }\n\n  // Show 10 most recent\n  const recentPushes = pushes.slice(0, 10);\n\n  recentPushes.forEach((push) => {\n    let title = push.title;\n    let body = push.body;\n    let url = push.url;\n\n    // Handle SMS pushes\n    if (push.type === 'sms_changed' && push.notifications && push.notifications.length > 0) {\n      const sms = push.notifications[0];\n      title = sms.title || 'SMS';\n      body = sms.body || '';\n    }\n\n    // Skip empty\n    if (!title && !body && !url) {\n      return;\n    }\n\n    const pushItem = document.createElement('div');\n    pushItem.className = 'push-item';\n\n    // Add SMS badge\n    if (push.type === 'sms_changed') {\n      pushItem.classList.add('push-sms');\n    }\n\n    // Timestamp\n    if (push.created) {\n      const timestamp = new Date(push.created * 1000);\n      const timeElement = document.createElement('div');\n      timeElement.className = 'push-time';\n      timeElement.textContent = formatTimestamp(timestamp);\n      pushItem.appendChild(timeElement);\n    }\n\n    // Title\n    if (title) {\n      const titleEl = document.createElement('div');\n      titleEl.className = 'push-title';\n      titleEl.textContent = title;\n      pushItem.appendChild(titleEl);\n    }\n\n    // URL\n    if (url) {\n      const urlEl = document.createElement('a');\n      urlEl.href = url;\n      urlEl.target = '_blank';\n      urlEl.className = 'push-url';\n      urlEl.textContent = url;\n      pushItem.appendChild(urlEl);\n    }\n\n    // Body\n    if (body) {\n      const bodyEl = document.createElement('div');\n      bodyEl.className = 'push-body';\n      bodyEl.textContent = body;\n      pushItem.appendChild(bodyEl);\n    }\n\n    pushesList.appendChild(pushItem);\n  });\n}\n\n/**\n * Format timestamp\n */\nfunction formatTimestamp(date: Date): string {\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  const diffSec = Math.floor(diffMs / 1000);\n  const diffMin = Math.floor(diffSec / 60);\n  const diffHour = Math.floor(diffMin / 60);\n  const diffDay = Math.floor(diffHour / 24);\n\n  if (diffDay > 0) {\n    return `${diffDay}d ago`;\n  } else if (diffHour > 0) {\n    return `${diffHour}h ago`;\n  } else if (diffMin > 0) {\n    return `${diffMin}m ago`;\n  } else {\n    return 'just now';\n  }\n}\n\n/**\n * Handle file selection\n */\nfunction handleFileSelect(event: Event): void {\n  const target = event.target as HTMLInputElement;\n  const file = target.files?.[0];\n  if (file) {\n    fileName.textContent = file.name;\n    fileSize.textContent = formatFileSize(file.size);\n    fileSelected.style.display = 'block';\n  } else {\n    fileSelected.style.display = 'none';\n  }\n}\n\n/**\n * Format file size\n */\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n}\n\n/**\n * Toggle push type\n */\nasync function togglePushType(type: PushType): Promise<void> {\n  currentPushType = type;\n\n  // Update buttons\n  pushTypeNoteBtn.classList.toggle('active', type === 'note');\n  pushTypeLinkBtn.classList.toggle('active', type === 'link');\n  pushTypeFileBtn.classList.toggle('active', type === 'file');\n\n  if (type === 'note') {\n    noteForm.style.display = 'block';\n    linkForm.style.display = 'none';\n    fileForm.style.display = 'none';\n  } else if (type === 'link') {\n    noteForm.style.display = 'none';\n    linkForm.style.display = 'block';\n    fileForm.style.display = 'none';\n\n    // Auto-populate with current tab\n    try {\n      const tabs = await chrome.tabs.query({\n        active: true,\n        currentWindow: true,\n      });\n      if (tabs[0]) {\n        linkUrlInput.value = tabs[0].url || '';\n        linkTitleInput.value = tabs[0].title || '';\n      }\n    } catch (error) {\n      console.error('Error getting current tab info:', error);\n    }\n  } else if (type === 'file') {\n    noteForm.style.display = 'none';\n    linkForm.style.display = 'none';\n    fileForm.style.display = 'block';\n  }\n}\n\n/**\n * Send push\n */\nasync function sendPush(): Promise<void> {\n  if (!apiKey) return;\n\n  try {\n    const pushType = currentPushType;\n    const targetDevice = targetDeviceSelect.value;\n    const pushData: PushData = {\n      type: pushType,\n    };\n\n    // Set device target\n    if (targetDevice !== 'all') {\n      pushData.device_iden = targetDevice;\n    }\n\n    // Get source device iden\n    try {\n      const deviceResult = await chrome.storage.local.get(['deviceIden']);\n      if (deviceResult.deviceIden) {\n        pushData.source_device_iden = deviceResult.deviceIden as string;\n      }\n    } catch (error) {\n      console.error('Error getting device iden:', error);\n    }\n\n    // Set push data based on type\n    if (pushType === 'note') {\n      pushData.title = noteTitleInput.value.trim();\n      pushData.body = noteBodyInput.value.trim();\n\n      if (!pushData.title && !pushData.body) {\n        showStatus('Please enter a title or body for the note.', 'error');\n        return;\n      }\n    } else if (pushType === 'link') {\n      pushData.title = linkTitleInput.value.trim();\n      pushData.url = linkUrlInput.value.trim();\n      pushData.body = linkBodyInput.value.trim();\n\n      if (!pushData.url) {\n        showStatus('Please enter a URL for the link.', 'error');\n        return;\n      }\n    } else if (pushType === 'file') {\n      const file = fileInput.files?.[0];\n      if (!file) {\n        showStatus('Please select a file to attach.', 'error');\n        return;\n      }\n\n      showStatus('Uploading file...', 'info');\n\n      try {\n        // Request upload authorization\n        const uploadRequestResponse = await fetch('https://api.pushbullet.com/v2/upload-request', {\n          method: 'POST',\n          headers: {\n            'Access-Token': apiKey,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            file_name: file.name,\n            file_type: file.type || 'application/octet-stream'\n          })\n        });\n\n        if (!uploadRequestResponse.ok) {\n          throw new Error('Failed to request file upload authorization');\n        }\n\n        const uploadData = await uploadRequestResponse.json() as UploadRequestResponse;\n\n        // Upload to S3\n        const formData = new FormData();\n        Object.keys(uploadData.data).forEach(key => {\n          formData.append(key, uploadData.data[key]);\n        });\n        formData.append('file', file);\n\n        const uploadResponse = await fetch(uploadData.upload_url, {\n          method: 'POST',\n          body: formData\n        });\n\n        if (!uploadResponse.ok) {\n          throw new Error('Failed to upload file to server');\n        }\n\n        // Create file push\n        pushData.type = 'file';\n        pushData.file_name = uploadData.file_name;\n        pushData.file_type = uploadData.file_type;\n        pushData.file_url = uploadData.file_url;\n        pushData.body = (document.getElementById('file-body') as HTMLTextAreaElement).value.trim();\n\n        showStatus('File uploaded, sending push...', 'info');\n      } catch (uploadError) {\n        console.error('File upload error:', uploadError);\n        showStatus('Failed to upload file: ' + (uploadError as Error).message, 'error');\n        return;\n      }\n    }\n\n    // Send push\n    console.log('Sending push:', pushData);\n    const response = await fetch(PUSHES_URL, {\n      method: 'POST',\n      headers: {\n        'Access-Token': apiKey,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(pushData),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Push failed:', response.status, errorText);\n      let errorMessage = 'Failed to send push';\n      try {\n        const errorData = JSON.parse(errorText) as { error?: { message?: string } };\n        if (errorData.error?.message) {\n          errorMessage = errorData.error.message;\n        }\n      } catch {\n        // Use default\n      }\n      throw new Error(errorMessage);\n    }\n\n    // Clear form\n    clearPushForm();\n\n    // Show success\n    showStatus('Push sent successfully!', 'success');\n\n    // Reload pushes\n    const pushes = await fetchRecentPushes();\n    displayPushes(pushes);\n  } catch (error) {\n    showStatus(`Error: ${(error as Error).message}`, 'error');\n  }\n}\n\n/**\n * Clear push form\n */\nfunction clearPushForm(): void {\n  noteTitleInput.value = '';\n  noteBodyInput.value = '';\n  linkTitleInput.value = '';\n  linkUrlInput.value = '';\n  linkBodyInput.value = '';\n  fileInput.value = '';\n  (document.getElementById('file-body') as HTMLTextAreaElement).value = '';\n  fileSelected.style.display = 'none';\n}\n\n/**\n * Show status message\n */\nfunction showStatus(message: string, type: 'success' | 'error' | 'info'): void {\n  statusMessage.textContent = message;\n  statusMessage.className = type;\n\n  setTimeout(() => {\n    statusMessage.textContent = '';\n    statusMessage.className = '';\n  }, 3000);\n}\n\n/**\n * Scroll to recent pushes\n */\nfunction scrollToRecentPushes(): void {\n  const recentPushesSection = document.querySelector('.recent-pushes');\n  if (recentPushesSection) {\n    console.log('Scrolling to recent pushes section');\n    recentPushesSection.scrollIntoView({\n      behavior: 'smooth',\n    });\n  }\n}\n\n/**\n * Update connection indicator\n * REMOVED: Connection indicator UI element removed, using badge instead\n */\n// function updateConnectionIndicator() - REMOVED\n\n/**\n * Listen for messages from background\n */\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.action === 'connectionStateChanged') {\n    // Connection state changes now shown via badge icon only\n    console.log('Connection state changed:', message.state);\n  } else if (message.action === 'pushesUpdated') {\n    if (message.pushes) {\n      displayPushes(message.pushes as Push[]);\n    }\n  }\n});\n\n// Initialize on DOM load\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', init);\n} else {\n  init();\n}\n\n"],
  "mappings": "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",
  "names": []
}
